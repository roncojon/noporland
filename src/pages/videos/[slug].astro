---
import ModalWrapper from "../../components/ModalWrapper";
import VideoPlayer from "../../components/VideoPlayer";
import Layout from "../../layouts/Layout.astro";

// Enable SSR if needed
export const prerender = false; 

// Access the slug from the URL dynamically using Astro.params
const { slug } = Astro.params;

// Fetch the query parameters
const searchParams = new URL(Astro.request.url).searchParams;
const tags = searchParams.get('tags') ? JSON.parse(searchParams.get('tags')) : [];

// Map the slug to the external CloudFront URL
const videoUrl = `https://d1a9sy9txb1eh6.cloudfront.net/MainVideos/${slug}`;

// Example video data
const videoData = {
  title: `${slug}`, // Video Title: 
  description: "" /* `This is the description for the video: ${slug}` */,
  videoUrl,
  tags, // Adding the tags to videoData
};

// Log the tags to console
// console.log("Tags for video:", videoData.tags);
---
<Layout title={videoData.title}>
  <a href="/" title="Return home">
    <button class="btn btn-ghost">
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="w-6 h-6">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
      </svg>
    </button>
  </a>
  <article class="main-video-container">
    <ModalWrapper client:only="react"/>
    <!-- Main Video Display -->
    <div class="video-wrapper">
        <div class=" item1">
         <VideoPlayer client:only="react" videoUrl={videoData.videoUrl} /> <!-- client:only="react" -->
        </div>
        <div class=" itemContainer">
         <div class=" item2">
          <ins class="eas6a97888e37" data-zoneid="5435438"></ins> 
         </div>
          <div class=" item3">
           <ins class="eas6a97888e37" data-zoneid="5435474"></ins> 
          </div>
        </div>
        
       
     
    </div>
          <!-- vertical 2 images -->
          <!-- <ins class="eas6a97888e20" data-zoneid="5435464"></ins>  -->

          <!-- Video popup bottom right -->
         <!-- <ins class="eas6a97888e31" data-zoneid="5435430"></ins>  -->

    <!-- Video Details -->
    <div class="video-info">
      <h2>{videoData.title}</h2>
      <p>{videoData.description}</p>
      <!-- Display the tags if available -->
      <!-- <ul>
        {videoData?.tags?.map(tag => <li>{tag || ""}</li>)} -->

        <div class="flex flex-wrap my-2 w-full">
          {videoData?.tags.sort((a, b) => a.localeCompare(b))?.map((tag) => (
            <div
              class="badge badge-primary flex items-center p-3 m-1 border-none bg-[rgb(var(--accent))]  text-[rgb(var(--accent-light))] font-bold "
            >
              {tag}
            </div>
          ))}
        </div>
        
      <!-- </ul> -->
    </div>
    <div class=" w-full flex justify-center">
     <div class=" w-[60%] max-w-[820px] overflow-auto">
      <ins class="eas6a97888e20" data-zoneid="5435448"></ins> 
     </div>
    </div>
  </article>
</Layout>

<style>
  * {
    box-sizing: border-box;
  }

  .main-video-container {
    display: flex;
    flex-direction: column;
    padding: 20px;
    background-color: #23262d;
    border-radius: 10px;
    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
    /* max-width: 900px; */
    /* max-width: calc(100% - 400px); */
    margin: auto;
    /* max-height: 100%; */
    /* min- */
    min-height: calc(100% - 129px);
  }

  .video-wrapper {
    display: grid;
  grid-template-columns: repeat(4, 1fr); /* 4 equal columns */
  grid-template-rows: repeat(2, auto);   /* 2 rows */
  gap: 10px; /* Space between grid items */

    position: relative;
    /* display: flex; */
    gap: 12px;
    width: 100%;
    /* aspect-ratio: 16/9; */
    border-radius: 8px;
    overflow: hidden;
  }

  .main-video {
    width: 100%;
    border-radius: 8px;
    background-color: #171313;
  }

  .video-info {
    padding: 20px 0;
  }

  h2 {
    font-size: 1.25rem;
    color: white;
    margin: 0 0 10px 0;
  }

  p {
    font-size: 1.25rem;
    color: rgba(255, 255, 255, 0.8);
    margin: 0;
  }

  @media (max-width: 650px) {
    .main-video-container {
    min-height: calc(100% - 163px);
    }
  }

  /* Item 1 occupies grids 1, 2, 3, 5, 6, 7 */
.item1 {
  grid-column: 1 / span 3; /* Spans from column 1 to 3 */
  grid-row: 1 / span 2;    /* Spans both rows */
}

.itemContainer {
  grid-column: 4;
  grid-row: 1 / span 2;
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  gap: 10px;
}

/* .item2, .item3 {
  height: 100%;
  background-color: #1c232b;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 8px;
  } */

/* Item 2 occupies grid 4 */
/* .item2 {
  grid-column: 4;
  grid-row: 1;
} */

/* Item 3 occupies grid 8 */
/* .item3 {
  grid-column: 4;
  grid-row: 2;
} */

/* Responsive layout for small screens */
@media (max-width: 768px) {
  .video-wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .item1 {
    width: 100%; /* Full width for item1 */
  }
 .itemContainer {
    width: 100%; /* Full width for item1 */
    /* display: flex;
    align-items: center;
    justify-items: center; */
    flex-direction: row;
  }
  .item2, .item3 {
  width: 46%;
  }
}
</style>
